# This is a basic workflow to help you get started with Actions

name: hello-github-actions

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      json:
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job2:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ inputs.str}}
          for obj in $(echo "$json" | jq -c '.[]'); do
              deploySeq=$(echo "$obj" | jq -r '.deploySeq')
              fallbackSeq=$(echo "$obj" | jq -r '.fallbackSeq')
              source_repo=$(echo "$obj" | jq -r '.source_repo')
              tag=$(echo "$obj" | jq -r '.tag')
              commitId=$(echo "$obj" | jq -r '.commitId')

              echo "deploySeq: $deploySeq"
              echo "fallbackSeq: $fallbackSeq"
              echo "source_repo: $source_repo"
              echo "tag: $tag"
              echo "commitId: $commitId"
          done
          json_data='[
              {
                  "deploySeq":"10-30",
                  "fallbackSeq":"30-50",
                  "deploypackageFolder":[
                      {"DP_010_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]},
                      {"DP_020_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]},
                      {"DP_030_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]}
                  ],
                  "fallbackpackageFolder":[
                      {"FB_030_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]},
                      {"FB_040_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]},
                      {"FB_050_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]}
                  ],
                  "source_repo":"VCDRA/CMS_Schedule_App",
                  "tag":"CCDDP-2",
                  "commitId":"232df1234f"
              },
              {
                  "deploySeq":"40-50",
                  "fallbackSeq":"10-20",
                  "deploypackageFolder":[
                      {"DP_010_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]},
                      {"DP_020_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]},
                      {"DP_030_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]}
                  ],
                  "fallbackpackageFolder":[
                      {"FB_030_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]},
                      {"FB_040_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]},
                      {"FB_050_corp-db_SchedulerTable_A":["DB_SERVER_LIST_CORP/corp/updateA1.sql","DB_SERVER_LIST_CORP/corp/updateA2.sql"]}
                  ],
                  "source_repo":"VCDRA/CMS_RPT_App",
                  "tag":"CCDDP-2",
                  "commitId":"34fdgfgss"
              }
          ]'

          # 解析JSON数组并遍历每个对象
          for obj in $(echo "$json_data" | jq -c '.[]'); do
              deploySeq=$(echo "$obj" | jq -r '.deploySeq')
              fallbackSeq=$(echo "$obj" | jq -r '.fallbackSeq')
              source_repo=$(echo "$obj" | jq -r '.source_repo')
              tag=$(echo "$obj" | jq -r '.tag')
              commitId=$(echo "$obj" | jq -r '.commitId')

              echo "deploySeq: $deploySeq"
              echo "fallbackSeq: $fallbackSeq"
              echo "source_repo: $source_repo"
              echo "tag: $tag"
              echo "commitId: $commitId"
              echo
          done
        
